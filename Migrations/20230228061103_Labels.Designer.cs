// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Project_HU;

#nullable disable

namespace Project_HU.Migrations
{
    [DbContext(typeof(TaskContext))]
    [Migration("20230228061103_Labels")]
    partial class Labels
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("IssueLabel", b =>
                {
                    b.Property<int>("Issuesissue_id")
                        .HasColumnType("int");

                    b.Property<int>("Labelsid")
                        .HasColumnType("int");

                    b.HasKey("Issuesissue_id", "Labelsid");

                    b.HasIndex("Labelsid");

                    b.ToTable("IssueLabel");
                });

            modelBuilder.Entity("Project_HU.Models.Issue", b =>
                {
                    b.Property<int>("issue_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Assigneeuser_id")
                        .HasColumnType("int");

                    b.Property<int>("Projectsproject_id")
                        .HasColumnType("int");

                    b.Property<int>("Reporteruser_id")
                        .HasColumnType("int");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("status")
                        .HasColumnType("int");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("type")
                        .HasColumnType("int");

                    b.HasKey("issue_id");

                    b.HasIndex("Assigneeuser_id");

                    b.HasIndex("Projectsproject_id");

                    b.HasIndex("Reporteruser_id");

                    b.ToTable("Issues");
                });

            modelBuilder.Entity("Project_HU.Models.Label", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("labelName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.ToTable("Labels");
                });

            modelBuilder.Entity("Project_HU.Models.Project", b =>
                {
                    b.Property<int>("project_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Creatoruser_id")
                        .HasColumnType("int");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("project_id");

                    b.HasIndex("Creatoruser_id");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("Project_HU.Models.User", b =>
                {
                    b.Property<int>("user_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("username")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("user_id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Project_HU.Models.UserRole", b =>
                {
                    b.Property<int>("role_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("role")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("role_id");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("UserUserRole", b =>
                {
                    b.Property<int>("UserRolesrole_id")
                        .HasColumnType("int");

                    b.Property<int>("Usersuser_id")
                        .HasColumnType("int");

                    b.HasKey("UserRolesrole_id", "Usersuser_id");

                    b.HasIndex("Usersuser_id");

                    b.ToTable("UserUserRole");
                });

            modelBuilder.Entity("IssueLabel", b =>
                {
                    b.HasOne("Project_HU.Models.Issue", null)
                        .WithMany()
                        .HasForeignKey("Issuesissue_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Project_HU.Models.Label", null)
                        .WithMany()
                        .HasForeignKey("Labelsid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Project_HU.Models.Issue", b =>
                {
                    b.HasOne("Project_HU.Models.User", "Assignee")
                        .WithMany()
                        .HasForeignKey("Assigneeuser_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Project_HU.Models.Project", "Projects")
                        .WithMany("Issues")
                        .HasForeignKey("Projectsproject_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Project_HU.Models.User", "Reporter")
                        .WithMany()
                        .HasForeignKey("Reporteruser_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Assignee");

                    b.Navigation("Projects");

                    b.Navigation("Reporter");
                });

            modelBuilder.Entity("Project_HU.Models.Project", b =>
                {
                    b.HasOne("Project_HU.Models.User", "Creator")
                        .WithMany("Projects")
                        .HasForeignKey("Creatoruser_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Creator");
                });

            modelBuilder.Entity("UserUserRole", b =>
                {
                    b.HasOne("Project_HU.Models.UserRole", null)
                        .WithMany()
                        .HasForeignKey("UserRolesrole_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Project_HU.Models.User", null)
                        .WithMany()
                        .HasForeignKey("Usersuser_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Project_HU.Models.Project", b =>
                {
                    b.Navigation("Issues");
                });

            modelBuilder.Entity("Project_HU.Models.User", b =>
                {
                    b.Navigation("Projects");
                });
#pragma warning restore 612, 618
        }
    }
}
